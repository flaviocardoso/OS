Configurações de pastas atual:
	v1.0:
		pasta ->app
			pasta ->acesso
			pasta ->components
			pasta ->controllers
			pasta ->data
			pasta ->directives
			pasta ->manual
			pasta ->services
			pasta ->session
			pasta ->views
		pasta ->css
		pasta ->js
	v1.0.1:
		pasta ->app
			pasta ->acesso
			pasta ->data
			pasta ->manual
			pasta ->views


Erros;
	Em select para orientação na seleção, não deixa enviar caracteres especiais. (Solução tirar tudos os caracteres especiais do banco de dados) - Problema corrigido "chartset=utf8" na linha de link de carregamento do banco.
	Não carregamento com campos vazios na criação da ordem de serviço. - Problema corrigido. Campos já selecionados carregam automáticamente os select das optções inferiores.
	Enviando ordem de serviço com campos vazios. - Problema corrigido. Função com retorno vazio imperdindo que a criação da ordem de serviço continue.

Melhorias;
	Sistema de mensagens de erro com implementação de toaster
	1 ) para carregamento do autenticado e para o carregamento dos usuários para sessão. --> completo.
	2 ) para verificação para criação da ordem de serviço.

raiz - Arquivo : principal.php:
	- Trocar "<base href="">" para a base do sistema link
	- Trocar todo direcionamento de link dos scripts (base + localização)

1 - pasta - "session":
	1.1 - arquivo : "sessionService.js"
		1.1.1 - serviço : "sessionService"
			1.1.1.1 - função : set -> set uma chave e um valor no sessionStorage - sessionStorage.setItem(key, value)
			1.1.1.2 - função : get -> retorna um valor na sessionStorage apartir da chave - sessionStorage.getItem(key)
			1.1.1.3 - função : destroy -> remove o item pela chave e remove sessão de usuário do php - $http.post('/ang3/acesso/logout.php') e sessionStorage.removeItem(key);

2 - pasta - "services":

	2.1 - arquivo - "loginService.js":
		2.1.1 - serviço : "loginService":
			2.1.1.1 - função : login -> recebe o usuário e um scope de verificação. Conecta com o script "login.php" para ver se tem esse usúario no banco de dados. Se login e senha correto, ("retorna com dados direciona para a tela principal da aplicação já logado" - modificado, antigo) retorna o número de identificação para o proxímo passo (2.2.1) . Se não tiver usúario cadastrado aparece erro na tela de login.
			2.1.1.2 - função : logout -> Usa o serviço "sessionService" (1.1.1) na função destroy (1.1.1.3) para deslogar ou encerrar a sessão de usuário.
			2.1.1.3 - função : islogged -> verifica a sessão da chave de "sessionStorage" do usuário. Ela usa o script "session.php".

	2.2 - arquivo - "loginSessionService.js":
		2.2.1 - serviço : "loginSessionService":
			2.2.1.1 - função : setSession -> recebe o usuario, o número de identificação e scope. Verifica se tem usuário no banco de dados interno. Conecta com o script "session_user.php". Se os dados estiverem corretos irá para a página principal do dashboard e setará a sessão do usuário para o navegador (1.1.1)(1.1.1.1) e o servidor. Se não irá retornar um erro de usuário não encontrado no banco de dados interno.


3 - pasta - "app":

3.1 - arquivo - "app.js" -> arquivo principal para o funcionamento da aplicação
3.1.1 - variárivel "app" -> cria o modulo "app" e inicia os modulos 'ui.router', 'ngAnimate', 'ngProgress', 'toaster'.
3.1.2 - "app.config" -> Parte de configuração dos links 
3.1.3 - "app.run" -> carregamento da aplicação

